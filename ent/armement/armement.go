// Code generated by ent, DO NOT EDIT.

package armement

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the armement type in the database.
	Label = "armement"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// Table holds the table name of the armement in the database.
	Table = "armements"
)

// Columns holds all SQL columns for armement fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldQuantity,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "armements"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"spacecraft_id",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	QuantityValidator func(string) error
)

// OrderOption defines the ordering options for the Armement queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByQuantity orders the results by the quantity field.
func ByQuantity(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldQuantity, opts...).ToFunc()
}
